<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">


	<!--<bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer" p:location="db-prod.properties"/>  
	
	-->
	<!-- shortcut for property configurer -->
	<context:property-placeholder location="db-prod.properties"/>
	
	<!-- to inject more than 1 properties file
	 
	<context:property-placeholder locations="db-prod.properties"/>
	<context:property-placeholder locations="server-prod.properties"/>
	OR
	<bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer" p:locations-ref="locations"/>
	<util:list>
		<value>server-prod.properties</value>
		<value>db-prod.properties</value>
	 </util:list>
	OR
	<util:properties location="db-test.properties"></util:properties> 	 
	 -->
	
	
	 
	
	<!-- <context:property-placeholder location="classpath:db-${myenv}.properties"/> Pass myenv can be sent to VM args as -Dmyenv=test -->

  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
  	p:driverClassName="${db.driverclassname}" p:url="${db.url}"
  	p:username="${db.user}" p:password="${db.password}" />
		
	<jdbc:initialize-database data-source="dataSource">
		<jdbc:script location="classpath:dbscripts.sql"/>
	</jdbc:initialize-database>  
	
	<!-- 
	Example : Bean Inheritance
	
	Problem : Redundant Definition 
	<bean id="dataSourceA" class="org.apache.commons.dbcp.BasicDataSource" 
  	p:driverClassName="com.mysql.jdbc.Driver" p:url="jdbc:mysql://localhost/springdb"
  	p:username="root" p:password="root" />
  	
	<bean id="dataSourceB" class="org.apache.commons.dbcp.BasicDataSource" 
  	p:driverClassName="com.mysql.jdbc.Driver" p:url="jdbc:mysql://localhost/springdb"
  	p:username="root" p:password="root" />
		
	Solution:
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
  	p:driverClassName="com.mysql.jdbc.Driver" p:url="jdbc:mysql://localhost/springdb" abstract="true"/> //abstract true if object instantiation of this particular bean
	
	<bean id="dataSourceA" class="org.apache.commons.dbcp.BasicDataSource" 
  	p:username="root" p:password="root"/>
  	
  	<bean id="dataSourceB" class="org.apache.commons.dbcp.BasicDataSource" 
  	p:username="root" p:password="root" p:url="jdbc:mysql://localhost/springdbtest"/>
  	
  	
	 -->
	
		
</beans>
